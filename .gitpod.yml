tasks:
- name: docker-install
# The built step is helpful because we modify the wordpress docker image to include wp-CLI
  init: |
    docker-compose pull
    docker-compose build
    echo "Docker images built. Starting Docker..."
  command: |
    gp sync-done docker
    docker-compose up

- name: wordpress-install
# Waits a little for DB to be fully up and then configures Wordpress
# More wp-cli commands are possible following "docker exec -it gitpod-wordpress-development-wordpress-1" and ending with "--allow-root"
# Finally set permissions on newly installed files for github user
  init: |
    gp sync-await docker
    sleep 10
    echo "Installing Wordpress..."
    docker exec -it gitpod-wpdev-wordpress wp core install --url="8000-${GITPOD_WORKSPACE_ID}.${GITPOD_WORKSPACE_CLUSTER_HOST}" --title="Gitpod Wordpress Development" --admin_user="admin" --admin_password="admin" --admin_email="you@example.com" --skip-email --allow-root
    docker exec -it gitpod-wpdev-wordpress wp theme install happenstance --activate --allow-root
    sudo chmod -R 755 ./wp-core
    sudo chown -R gitpod:gitpod ./wp-core
    sudo chmod -R 755 ./wp-content
    sudo chown -R gitpod:gitpod ./wp-content
    # cd ./wp-content/themes && wget https://downloads.wordpress.org/theme/happenstance.3.0.1.zip && unzip happenstance*
    # cd ./wp-content/plugins && wget https://downloads.wordpress.org/plugin/add-from-server.3.4.5.zip && unzip add-from-server*
    # cd ./wp-content/plugins && wget https://downloads.wordpress.org/plugin/wpdatatables.zip && unzip wpdatatables*
# Opens Wordpress in external browser
# Tail the logs
  command: |
    gp preview $(gp url 8000) --external
    multitail ./.env/wp-apache-logs/access.log -I ./.env/wp-apache-logs/error.log


ports:
  - port: 8000
    onOpen: ignore
  - port: 8080
    onOpen: ignore

vscode:
  extensions:
    - ms-azuretools.vscode-docker
    - johnbillion.vscode-wordpress-hooks
    - formulahendry.vscode-mysql
